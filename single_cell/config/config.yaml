pools: "{$reference:pools}"

picard_wgs_params:
  # Minimum base quality to count a read
  min_bqual: 20

  # Minimum mapping quality to count a read
  min_mqual: 20

  # Count unpaired reads for wgs metrics
  count_unpaired: false

titan_params:

  normal_contamination: [0.2, 0.4, 0.6, 0.8]

  num_clusters: [1, 2]

  ploidy: [1, 2, 3, 4]

  chrom_info_filename: "{$cluster:$reference:chrom_info_filename}"

  window_size: "{copynumber_bin_size}"

  ref_data_dir: "{$cluster:$reference:copynumber_ref_data}"

  # Binned GC content file
  gc_wig: "{$cluster:$reference:gc_wig_file:$copynumber_bin_size}"

  # Binned mappability file
  mappability_wig: "{$cluster:$reference:map_wig_file:$copynumber_bin_size}"

# HMMcopy parameters
hmmcopy_params:
  autoploidy:

    multipliers: [1,2,3,4,5,6]

    map_cutoff: 0.9

    bin_size: "{bin_size}"

    e: 0.999999

    eta: 50000

    g: 3

    lambda: 20

    min_mqual: 20

    nu: 2.1

    num_states: 12

    s: 1

    strength: 1000

    kappa: 100,100,700,100,25,25,25,25,25,25,25,25

    m: 0,1,2,3,4,5,6,7,8,9,10,11

    mu: 0,1,2,3,4,5,6,7,8,9,10,11

    smoothing_function: "{smoothing_function}"

    exclude_list: "{$cluster:$reference:exclude_list}"

    gc_wig_file: "{$cluster:$reference:gc_wig_file:$bin_size}"

    map_wig_file: "{$cluster:$reference:map_wig_file:$bin_size}"

# Reference genome to align to in fasta format. Should be indexed by aligner and samtools
ref_genome: "{$cluster:$reference:ref_genome}"

# Chromosomes for copy number analysis
chromosomes: "{$reference:chromosomes}"

mutationseq_python: /usr/local/miniconda2/envs/museq/bin/python

mutationseq: "{$cluster:mutationseq}"

mutationseq_model: "{$cluster:mutationseq_model}"

# format:  column name( in metrics file), operator, value
# operators: gt(>), ge(>=), lt(<), le(<=), eq(==), ne(!=)
good_cells:

  - ['median_hmmcopy_reads_per_bin', 'ge', 50]

gc_windows: '{$cluster:$reference:gc_windows}'

one_split_job: False

memory:
  low: 2

  med: 6

  high: 18

max_cores: "{$cluster:max_cores}"

aligner: "{aligner}"

adapter: 'CTGTCTCTTATACACATCTCCGAGCCCACGAGAC'

adapter2: 'CTGTCTCTTATACACATCTGACGCTGCCGACGA'

split_size: 10000000

destruct:
  genome_fasta: '/refdata/GRCh37-lite.fa'
  genome_fai: '/refdata/GRCh37-lite.fa.fai'

databases:
  cosmic:
    download_method: sftp
    user_name: awm3@sfu.ca
    password: shahlabith
    host: sftp-cancer.sanger.ac.uk
    remote_paths:
      coding: /files/grch37/cosmic/v75/VCF/CosmicCodingMuts.vcf.gz
      non_coding: /files/grch37/cosmic/v75/VCF/CosmicNonCodingVariants.vcf.gz
    local_path: '/refdata/cosmic_v75.vcf.gz'

  dbsnp:
    url: ftp://ftp.ncbi.nih.gov/snp/organisms/human_9606_b146_GRCh37p13/VCF/common_all_20151104.vcf.gz
    local_path: '/refdata/dbsnp_b146_GRCh37p13.vcf.gz'

  mappability:
    url: http://hgdownload-test.cse.ucsc.edu/goldenPath/hg19/encodeDCC/wgEncodeMapability/release3/wgEncodeCrgMapabilityAlign50mer.bigWig
    local_path: '/refdata/wgEncodeCrgMapabilityAlign50mer.bigWig'

  ref_genome:
    url: http://www.bcgsc.ca/downloads/genomes/9606/hg19/1000genomes/bwa_ind/genome/GRCh37-lite.fa
    local_path: '/refdata/GRCh37-lite.fa'

  snpeff:
    db: GRCh37.75

cosmic_status:
  kwargs:
    split_size: 10000000

dbsnp_status:
  kwargs:
    split_size: 10000000

mappability:
  kwargs:
    split_size: 10000000

snpeff:
  kwargs:
    split_size: 10000000

tri_nucleotide_context:
  kwargs:
    split_size: 10000000

